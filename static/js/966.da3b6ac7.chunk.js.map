{"version":3,"file":"static/js/966.da3b6ac7.chunk.js","mappings":"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","sources":["Pages/Register/components/RegisterForm.tsx","Pages/Register/RegisterPage.tsx","Pages/Register/RegisterPageStyled.ts","Pages/Register/components/RegisterFormStyled.ts"],"sourcesContent":["import { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  ErrorMessageStyled,\n  FieldGroup,\n  FieldStyled,\n  FormStyled,\n  IconButton,\n} from './RegisterFormStyled';\n// import { useDispatch } from 'react-redux';\n// import { AppDispatch } from '../../../redux/store';\n// import { register } from '../../../redux/auth/operators';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\n\n\nimport { IoEye, IoEyeOffOutline } from 'react-icons/io5';\nimport { useRegisterMutation } from '../../../redux/sliceApi';\n\ninterface RegValues {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst userSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[A-Z][a-z]{1,} [A-Z][a-z]{1,}$/,\n      'Insert Name and Surname please'\n    )\n    .required('Required'),\n\n  email: Yup.string()\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, 'Incorrect email format')\n    .required('Required'),\n\n  password: Yup.string()\n    .min(6, 'Password has to be at least 6 charts')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  // const dispatch = useDispatch<AppDispatch>();\n  const [register]=useRegisterMutation();\n  const navigate = useNavigate();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const swapPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  \n\n  const handleSubmit = async (\n    values: RegValues,\n    actions: FormikHelpers<RegValues>\n  ) => {\n    const registerData = {\n      name: values.name,\n      email: values.email.toLowerCase(),\n      password: values.password,\n    };\n    try {\n      await  register(registerData).unwrap();\n      navigate(`/login`);\n   \n      \n      \n    } catch (error) {\n      console.error('Failed to register:', error);\n    }finally{\n      actions.resetForm();\n    }\n\n    \n    \n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={userSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <FieldGroup>\n          Username\n          <FieldStyled name=\"name\" type=\"string\" placeholder=\"John Smith\" />\n          <ErrorMessageStyled name=\"name\" component=\"span\" />\n        </FieldGroup>\n\n        <FieldGroup>\n          E-mail\n          <FieldStyled\n            name=\"email\"\n            type=\"string\"\n            placeholder=\"some@mail.com\"\n          />\n          <ErrorMessageStyled name=\"email\" component=\"span\" />\n        </FieldGroup>\n          \n\n        <FieldGroup>\n          Password\n          <FieldStyled name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"123456\" />\n          <IconButton type=\"button\" onClick={swapPassword}>\n            {showPassword ? <IoEye /> : <IoEyeOffOutline />}\n          </IconButton>\n          <ErrorMessageStyled name=\"password\" component=\"span\" />\n        </FieldGroup>\n\n        <Button type=\"submit\">Create an Account </Button>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import { RegisterForm } from './components/RegisterForm';\nimport { Helmet } from 'react-helmet-async';\nimport { Header, TextBlock, Link } from './RegisterPageStyled';\nimport { useSelector } from 'react-redux';\nimport { selectErrorMessage } from '../../redux/auth/selectors';\n// import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../../Hooks\";\n\nexport default function Register() {\n  const errorMessage = useSelector(selectErrorMessage);\n\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <Header>Sign Up</Header>\n      <RegisterForm />\n\n      {errorMessage !=='Email in use' ? (\n        <TextBlock>\n          <p>Already have an account?</p>\n          <p>\n            <Link href=\"/login\">Sign in</Link>\n          </p>\n        </TextBlock>\n      ) : (\n        <TextBlock>\n          <p style={{color:\"red\"}}>E-mail is already in use.</p>\n          <p style={{color:\"red\"}}>Try to Sign in please. </p>\n          <p>\n            <Link href=\"/login\">Sign in</Link>\n          </p>\n        </TextBlock>\n        \n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  font-size: 30px;\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const TextBlock = styled.div`\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const Link = styled.a`\n  text-decoration: underline;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n\n  align-items: center;\n\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  cursor: pointer;\n  vertical-align: middle;\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  color: rgb(255, 255, 255);\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  outline: 0px;\n  border-width: 0px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 5px -3px,\n      rgba(0, 0, 0, 0.22) 0px 8px 10px 1px, rgba(0, 0, 0, 0.2) 0px 3px 14px 2px;\n  }\n`;","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.norm};\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2);\n\n  padding: ${p => p.theme.padding.huge};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: ${p => p.theme.gap.norm};\n`;\n\nexport const FieldGroup = styled.label`\n  display: flex;\n  font-family: Roboto, sans-serif;\n  font-size: 14px;\n  flex-direction: column;\n  gap: ${p => p.theme.gap.small};\n  position: relative;\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  padding: 0;\n  color: red;\n  font-size: 12px;\n  position: absolute;\n  left: 10px;\n  top: 105%;\n`;\nexport const FieldStyled = styled(Field)`\n  min-width: 200px;\n  padding: ${p => p.theme.padding.small};\n  font-size: 0.875rem;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  position: absolute;\n  right: 4px;\n  top: 55%;\n  border: none;\n  background-color: transparent;\n  align-items: center;\n  color: rgb(25, 118, 210);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  margin-top: 12px;\n  align-items: center;\n\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  cursor: pointer;\n  vertical-align: middle;\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  color: rgb(255, 255, 255);\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  outline: 0px;\n  border-width: 0px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 5px -3px,\n      rgba(0, 0, 0, 0.22) 0px 8px 10px 1px, rgba(0, 0, 0, 0.2) 0px 3px 14px 2px;\n  }\n`;\n"],"names":["userSchema","Yup","shape","name","matches","required","email","password","min","RegisterForm","_useRegisterMutation","useRegisterMutation","register","_slicedToArray","navigate","useNavigate","_useState","useState","_useState2","showPassword","setShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","actions","registerData","_context","prev","next","toLowerCase","unwrap","t0","console","error","resetForm","finish","stop","_x","_x2","apply","arguments","_jsx","Formik","initialValues","validationSchema","onSubmit","children","_jsxs","FormStyled","FieldGroup","FieldStyled","type","placeholder","ErrorMessageStyled","component","IconButton","onClick","IoEye","IoEyeOffOutline","Button","Register","errorMessage","useSelector","selectErrorMessage","_Fragment","Helmet","Header","TextBlock","Link","href","style","color","styled","_templateObject","_taggedTemplateLiteral","p","theme","padding","norm","_templateObject2","_templateObject3","_templateObject4","Form","colors","borderGray","borderRad","huge","gap","small","ErrorMessage","Field","_templateObject5","_templateObject6"],"sourceRoot":""}