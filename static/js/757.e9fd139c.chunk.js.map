{"version":3,"file":"static/js/757.e9fd139c.chunk.js","mappings":"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","sources":["Pages/mainPage/Components/modal/deleteModal/deleteModalWindowStyled.ts","Pages/mainPage/Components/modal/deleteModal/deleteModalWindow.tsx","Pages/mainPage/Components/modal/editModal/editModalStyled.ts","Pages/mainPage/Components/modal/editModal/editModal.tsx","Pages/mainPage/Components/taskForm/taskFormStyled.ts","Pages/mainPage/Components/taskForm/taskForm.tsx","Pages/mainPage/Components/modal/addSubTaskModal/addSubtaskModal.tsx","Pages/mainPage/Components/taskItem/taskItemStyled.ts","Pages/mainPage/Components/taskItem/taskItem.tsx","Pages/mainPage/Components/taskList/taskListStyled.ts","Pages/mainPage/Components/taskList/taskList.tsx","Pages/mainPage/Components/swipeableEdgeDrawer/SwipeableEdgeDrawer.tsx","Pages/mainPage/TaskPageStyled.ts","Pages/mainPage/TaskPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DeleteModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const ModalButton = styled.button`\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","// import { useDispatch } from 'react-redux';\n\n// import { deleteTask} from '../../../../../redux/tasks/operators';\n\nimport {\n  ButtonContainer,\n  DeleteModalContent,\n  ModalButton,\n} from './deleteModalWindowStyled';\nimport { FC } from 'react';\nimport { IdeleteTaskModal } from '../../../../../helpers/Task.types';\nimport { useDeleteTaskMutation } from '../../../../../redux/sliceApi';\n// import { AppDispatch } from '../../../../../redux/store';\n\nexport const DeleteConfirmationModal: FC<IdeleteTaskModal> = ({\n  _id,\n  onClose,\n}) => {\n  // const dispatch = useDispatch<AppDispatch>();\n  const [deleteTask] = useDeleteTaskMutation();\n  const handleDelete = async (): Promise<void> => {\n    try {\n      await deleteTask(_id);\n\n      // dispatch(fetchTasks());\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n\n    onClose();\n  };\n\n  return (\n    <DeleteModalContent>\n      <p style={{ textAlign: 'center' }}>\n        Are you sure you want to delete this task?\n      </p>\n      <ButtonContainer>\n        <ModalButton onClick={handleDelete}>Yes</ModalButton>\n        <ModalButton onClick={onClose}>No</ModalButton>\n      </ButtonContainer>\n    </DeleteModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalContent = styled.div`\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  width: 600px;\n  text-align: center;\n  position: relative;\n`;\n\nexport const TextInput = styled.textarea`\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 8px;\n  width: 300px;\n  margin: 20px 0;\n`;\n\nexport const ModalButton = styled.button`\n  margin: 0 10px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: none;\n  font-size: 16px;\n  cursor: pointer;\n`;\n","// import { useDispatch } from 'react-redux';\n// import { updateTask } from '../../../../../redux/tasks/operators';\nimport { ModalButton, TextInput } from './editModalStyled';\nimport { FC, useState } from 'react';\nimport { IeditTaskModal } from '../../../../../helpers/Task.types';\n// import { AppDispatch } from '../../../../../redux/store';\nimport { useUpdateTaskMutation } from '../../../../../redux/sliceApi';\n\nexport const EditTaskModal: FC<IeditTaskModal> = ({\n  _id,\n  title,\n  date,\n  text: initialText,\n  onClose,\n}) => {\n  // const dispatch = useDispatch<AppDispatch>();\n  const [updateTask] = useUpdateTaskMutation();\n  const [text, setText] = useState(initialText);\n\n  const handleUpdate = () => {\n    updateTask({ _id, text });\n    onClose();\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div>\n      <p>Edit task please</p>\n\n      <form>\n        <TextInput\n          name=\"text\"\n          rows={3}\n          value={text}\n          onChange={handleChange}\n          placeholder=\"Insert edited task here\"\n        />\n      </form>\n      <ModalButton type=\"button\" onClick={handleUpdate}>\n        Edit\n      </ModalButton>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  width: '80vw';\n\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.norm};\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2);\n\n  padding: ${p => p.theme.padding.big};\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.gap.big};\n`;\n\nexport const FieldGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.gap.small};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  padding: 0;\n  color: red;\n  font-size: 12px;\n`;\nexport const FieldStyled = styled(Field)`\n  width: 120px;\n\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n  @media screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\nexport const DescriptionFieldStyled = styled(Field)`\n  box-sizing: content-box;\n  width: 120px;\n  padding: 5px 2px;\n  height: 20vw;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n  @media screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  DescriptionFieldStyled,\n  ErrorMessageStyled,\n  FieldGroup,\n  FieldStyled,\n  FormStyled,\n} from './taskFormStyled';\n// import { useDispatch } from 'react-redux';\n// import { addTask } from '../../../../redux/tasks/operators';\nimport { ITask } from '../../../../helpers/Task.types';\nimport { FC } from 'react';\n// import { AppDispatch } from '../../../../redux/store';\nimport { formatToString } from '../../../../helpers/helper';\nimport { useAddTaskMutation } from '../../../../redux/sliceApi';\n// import Notiflix from 'notiflix';\n\ninterface TaskFormProp extends Partial<ITask> {\n  onClose: () => void;\n}\n\nconst taskSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  text: Yup.string(),\n  date: Yup.string(),\n  // .matches(/^[^!]*$/, 'The task cannot contain the \"!\" character.')\n});\n\nexport const TaskForm: FC<TaskFormProp> = ({ parentId, subLevel, onClose }) => {\n  // const dispatchTask = useDispatch<AppDispatch>();\n  const [addTask] = useAddTaskMutation();\n  const onAdd = (\n    values: { title: string; text: string; date: string },\n    actions: FormikHelpers<{ title: string; text: string; date: string }>\n  ) => {\n    // if (values.text.includes('!')) {\n    //   Notiflix.Notify.failure('The task field cannot contain \"!\" character.');\n    //   return;\n    // }\n    if (!parentId) {\n      parentId = '0';\n      subLevel = 0;\n    } else {\n      subLevel = (subLevel ?? 0) + 1;\n    }\n\n    const newTask = {\n      title: values.title,\n      text: values.text,\n      date: values.date,\n      parentId: parentId,\n      subLevel: subLevel,\n      done: false,\n    };\n    console.log(newTask);\n    console.log(formatToString(Date()));\n\n    addTask(newTask);\n    actions.resetForm();\n    if (onClose) {\n      onClose();\n    }\n  };\n  const initialValues = {\n    title: '',\n    text: '',\n    date: new Date().toString(),\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={taskSchema}\n      onSubmit={onAdd}\n      setFieldValue\n    >\n      <FormStyled>\n        <FieldGroup>\n          <FieldStyled name=\"title\" type=\"title\" placeholder=\"Task name\" />\n          <ErrorMessageStyled name=\"text\" component=\"span\" />\n        </FieldGroup>\n        <FieldGroup>\n          <DescriptionFieldStyled\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Task description\"\n          />\n          <ErrorMessageStyled name=\"text\" component=\"span\" />\n        </FieldGroup>\n        <FieldGroup>\n          <FieldStyled\n            name=\"date\"\n            type=\"datetime-local\"\n            placeholder={formatToString(initialValues.date)}\n          />\n          <ErrorMessageStyled name=\"text\" component=\"span\" />\n        </FieldGroup>\n\n        <Button type=\"submit\">Add Task</Button>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import { FC } from 'react';\nimport { IaddSubTaskModal } from '../../../../../helpers/Task.types';\nimport { TaskForm } from '../../taskForm/taskForm';\n\nexport const AddSubTaskModal: FC<IaddSubTaskModal> = ({\n  _id,\n  onClose,\n  subLevel,\n}) => {\n  return (\n    <div>\n      <h2\n        style={{\n          padding: 10,\n        }}\n      >\n        Add SubTask\n      </h2>\n\n      <TaskForm parentId={_id} onClose={onClose} subLevel={subLevel} />\n    </div>\n  );\n};\n","import styled from 'styled-components';\nexport const TaskRow = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: '10px 0';\n  width: 70vw;\n  margin-bottom: 10px;\n`;\n\nexport const DeleteButton = styled.button`\n  background: none;\n  border: none;\n  /* padding: 0 20px; */\n  cursor: pointer;\n  /* display: flex;\n  align-items: center; */\n  text-align: center;\n`;\n\nexport const EditButton = styled.button`\n  background: none;\n  border: none;\n  text-align: center;\n  justify-content: center;\n  padding: 0 10px;\n\n  cursor: pointer;\n  /* display: flex;\n  align-items: center; */\n`;\nexport const AddSubTaskButton = styled.button`\n  background: none;\n  /* padding: 0 10px; */\n  border: none;\n  text-align: center;\n\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\n\nimport { formatToString } from '../../../../helpers/helper';\n\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { DeleteConfirmationModal } from '../modal/deleteModal/deleteModalWindow';\nimport { EditTaskModal } from '../modal/editModal/editModal';\nimport { AddSubTaskModal } from '../modal/addSubTaskModal/addSubtaskModal';\n\nimport { Modal } from '../modal/modalWindow';\nimport {\n  AddSubTaskButton,\n  DeleteButton,\n  EditButton,\n  TaskRow,\n} from './taskItemStyled';\nimport { ITaskItemProp } from '../../../../helpers/Task.types';\n\nimport { VscTrash } from 'react-icons/vsc';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiAddLargeLine } from 'react-icons/ri';\nimport { FaCheck } from 'react-icons/fa6';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport const TaskItem: React.FC<ITaskItemProp> = ({ task, color }) => {\n  const { _id, title, text, date, subLevel, done } = task;\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState<React.ReactNode | null>(\n    null\n  );\n\n  const formattedDate = formatToString(date);\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const openSubTaskModal = () => {\n    setModalContent(\n      <AddSubTaskModal _id={_id} subLevel={subLevel} onClose={closeModal} />\n    );\n    openModal();\n  };\n\n  const openEditModal = () => {\n    setModalContent(\n      <EditTaskModal\n        _id={_id}\n        title={title}\n        text={text}\n        date={date}\n        onClose={closeModal}\n      />\n    );\n    openModal();\n  };\n\n  const openDeleteModal = () => {\n    setModalContent(<DeleteConfirmationModal _id={_id} onClose={closeModal} />);\n    openModal();\n  };\n  function CSSGrid() {\n    return (\n      <TaskRow>\n        <Box sx={{ width: 1 }}>\n          <Box display=\"grid\" gridTemplateColumns=\"repeat(13, 1fr)\" gap={1}>\n            <Box gridColumn=\"span 1\">\n              <Item style={{ backgroundColor: `${color}` }}>\n                {done && <FaCheck />}\n              </Item>\n            </Box>\n\n            <Box gridColumn=\"span 5\">\n              <Item style={{ backgroundColor: `${color}` }}>{title}</Item>\n            </Box>\n            <Box gridColumn=\"span 3\">\n              <Item>{formattedDate}</Item>\n            </Box>\n            <Box gridColumn=\"span 2\">\n              <Item>\n                <AddSubTaskButton onClick={openSubTaskModal}>\n                  <RiAddLargeLine style={{ height: '14px' }} />\n                </AddSubTaskButton>\n              </Item>\n            </Box>\n            <Box gridColumn=\"span 1\">\n              <Item>\n                <EditButton onClick={openEditModal}>\n                  <AiOutlineEdit style={{ height: '14px' }} />\n                </EditButton>\n              </Item>\n            </Box>\n            <Box gridColumn=\"span 1\">\n              <Item>\n                <DeleteButton onClick={openDeleteModal}>\n                  <VscTrash style={{ height: '14px' }} />\n                </DeleteButton>\n              </Item>\n            </Box>\n          </Box>\n        </Box>\n        <Modal isOpen={showModal} onClose={closeModal}>\n          {modalContent}\n        </Modal>\n      </TaskRow>\n    );\n  }\n\n  return <CSSGrid />;\n};\n","import styled from 'styled-components';\nexport const TasksList = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  gap: ${p => p.theme.gap.norm};\n`;\n","// import { useSelector } from 'react-redux';\nimport { TaskItem } from '../taskItem/taskItem';\nimport { TasksList } from './taskListStyled';\n// import { selectTask } from '../../../../redux/tasks/selectors';\nimport {\n  getColorForLevel,\n  groupTasksByParentId,\n  rootEl,\n} from '../../../../helpers/helper';\nimport { ITask } from '../../../../helpers/Task.types';\nimport { FC } from 'react';\nimport { useFetchTasksQuery } from '../../../../redux/sliceApi';\n\n// recursieve func to order tasks correctly\n\nconst renderTasks = (\n  tasks: ITask[],\n  taskMap: Record<string, ITask[]>,\n  level = 0\n): JSX.Element => {\n  return (\n    <ul>\n      {tasks &&\n        tasks.map(task => (\n          <li key={task._id} style={{ paddingLeft: 20 }}>\n            <TaskItem task={task} color={getColorForLevel(level)} children />\n            {taskMap[task._id] &&\n              renderTasks(taskMap[task._id], taskMap, level + 1)}\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport const TaskList: FC = () => {\n  const { data: tasks } = useFetchTasksQuery();\n  if (!tasks) {\n    return null;\n  }\n  // const tasks = useSelector(selectTask);\n\n  const taskMap = groupTasksByParentId(tasks);\n\n  const topLevelTasks = taskMap[rootEl(tasks) || ''] || [];\n\n  return <TasksList>{renderTasks(topLevelTasks, taskMap)}</TasksList>;\n};\n","import { TaskForm } from '../taskForm/taskForm';\n\nimport React, { FC } from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\n// import Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport { ITask } from '../../../../helpers/Task.types';\n\ninterface TemporaryDrawerProps extends Partial<ITask> {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst TemporaryDrawer: FC<TemporaryDrawerProps> = ({\n  open,\n  parentId,\n  subLevel,\n  onClose,\n}) => {\n  return (\n    <div>\n      <Drawer anchor=\"right\" open={open} onClose={onClose}>\n        <Box sx={{ width: '50vw' }} role=\"presentation\">\n          <Box sx={{ p: 2 }}>\n            <h2\n              style={{\n                padding: 10,\n              }}\n            >\n              Add New Task\n            </h2>\n            <Divider />\n            <TaskForm\n              parentId={parentId}\n              subLevel={subLevel}\n              onClose={onClose}\n            />\n          </Box>\n        </Box>\n      </Drawer>\n    </div>\n  );\n};\nexport default TemporaryDrawer;\n","import styled from 'styled-components';\n\nexport const DrawlerBtn = styled.div`\n  padding: 100px;\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  color: ${p => p.theme.colors.black};\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n","import { GlobalStyle } from '../../globalStyles/GlobalStyle';\nimport { TaskList } from './Components/taskList/taskList';\n\n// import { useSelector, useDispatch } from 'react-redux';\n// import {\n//   selectTask,\n//   selectError,\n//   selectIsLoading,\n// } from '../../redux/tasks/selectors';\nimport { FC, useState } from 'react';\n// import { fetchTasks } from '../../redux/tasks/operators';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nimport TemporaryDrawer from './Components/swipeableEdgeDrawer/SwipeableEdgeDrawer';\nimport { Container, DrawlerBtn, Loader } from './TaskPageStyled';\n// import { AppDispatch } from '../../redux/store';\nimport { Helmet } from 'react-helmet-async';\nimport { useFetchTasksQuery } from '../../redux/sliceApi';\nimport Button from '@mui/material/Button';\n\nconst Tasks: FC = () => {\n  // const allTasks = useSelector(selectTask);\n\n  const {\n    data: tasks,\n    isLoading,\n    isSuccess,\n    // isError,\n    error,\n  } = useFetchTasksQuery();\n  // const dispatch = useDispatch<AppDispatch>();\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n\n  // useEffect(() => {\n  //   dispatch(fetchTasks());\n  // }, [dispatch]);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const toggleDrawer = (newOpen: boolean) => () => {\n    setOpen(newOpen);\n  };\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <DrawlerBtn style={{ zIndex: 0, padding: '40px' }}>\n        <Button variant=\"contained\" onClick={toggleDrawer(true)}>\n          Create Task\n        </Button>\n      </DrawlerBtn>\n      <TemporaryDrawer open={open} onClose={toggleDrawer(false)} />\n\n      {isLoading && !error && (\n        <Loader>\n          <MagnifyingGlass\n            visible={true}\n            height=\"120\"\n            width=\"120\"\n            ariaLabel=\"magnifying-glass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"magnifying-glass-wrapper\"\n            glassColor=\"#3d9bba\"\n            color=\"#0f0d0d\"\n          />\n        </Loader>\n      )}\n\n      {isSuccess && tasks.length > 0 ? (\n        <div>\n          <TaskList />\n        </div>\n      ) : (\n        <h2>Add Your first task</h2>\n      )}\n\n      <GlobalStyle />\n    </Container>\n  );\n};\nexport default Tasks;\n"],"names":["DeleteModalContent","styled","_templateObject","_taggedTemplateLiteral","ButtonContainer","_templateObject2","ModalButton","_templateObject3","DeleteConfirmationModal","_ref","_id","onClose","_useDeleteTaskMutatio","useDeleteTaskMutation","deleteTask","_slicedToArray","handleDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","style","textAlign","onClick","TextInput","_templateObject4","EditTaskModal","_templateObject5","initialText","title","date","text","_useUpdateTaskMutatio","useUpdateTaskMutation","updateTask","_useState","useState","_useState2","setText","name","rows","value","onChange","e","target","placeholder","type","FormStyled","Form","p","theme","colors","borderGray","borderRad","norm","padding","big","gap","FieldGroup","small","ErrorMessageStyled","ErrorMessage","FieldStyled","Field","DescriptionFieldStyled","Button","_templateObject6","taskSchema","Yup","shape","required","TaskForm","parentId","subLevel","_useAddTaskMutation","useAddTaskMutation","addTask","initialValues","Date","toString","Formik","validationSchema","onSubmit","values","actions","_subLevel","newTask","done","log","formatToString","resetForm","setFieldValue","component","AddSubTaskModal","TaskRow","DeleteButton","EditButton","AddSubTaskButton","Item","Paper","_objectSpread","backgroundColor","palette","mode","typography","body2","spacing","color","secondary","TaskItem","task","showModal","setShowModal","_useState3","_useState4","modalContent","setModalContent","formattedDate","openModal","closeModal","openSubTaskModal","openEditModal","openDeleteModal","CSSGrid","Box","sx","width","display","gridTemplateColumns","gridColumn","concat","FaCheck","RiAddLargeLine","height","AiOutlineEdit","VscTrash","Modal","isOpen","TasksList","renderTasks","tasks","taskMap","level","length","undefined","map","paddingLeft","getColorForLevel","TaskList","useFetchTasksQuery","data","groupTasksByParentId","topLevelTasks","rootEl","open","Drawer","anchor","role","Divider","DrawlerBtn","Loader","Container","black","_useFetchTasksQuery","isLoading","isSuccess","setOpen","toggleDrawer","newOpen","Helmet","zIndex","variant","TemporaryDrawer","MagnifyingGlass","visible","ariaLabel","wrapperStyle","wrapperClass","glassColor","GlobalStyle"],"sourceRoot":""}