{"version":3,"file":"static/js/996.6ec36230.chunk.js","mappings":"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","sources":["Pages/Login/components/LogInForm.tsx","Pages/Login/LoginPage.tsx","Pages/Register/RegisterPageStyled.ts","Pages/Register/components/RegisterFormStyled.ts"],"sourcesContent":["import { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  ErrorMessageStyled,\n  FieldGroup,\n  FieldStyled,\n  FormStyled,\n  IconButton,\n} from '../../Register/components/RegisterFormStyled';\n// import { useDispatch } from 'react-redux';\n// import { AppDispatch } from '../../../redux/store';\n// import { login } from '../../../redux/auth/operators';\n\nimport { useState } from 'react';\nimport { IoEye, IoEyeOffOutline } from 'react-icons/io5';\nimport { useLoginMutation } from '../../../redux/sliceApi';\n\nconst userSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, 'Incorrect email format')\n    .required('Required'),\n\n  password: Yup.string()\n    .min(6, 'Password has to be at least 6 charts')\n    .required('Required'),\n});\n\nexport const LoginForm = () => {\n  const [login] = useLoginMutation();\n  // const dispatch = useDispatch<AppDispatch>();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const swapPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  interface LogValues {\n    email: string;\n    password: string;\n  }\n\n  const handleSubmit = async (\n    values: { email: string; password: string },\n    actions: FormikHelpers<LogValues>\n  ) => {\n    login({\n      email: values.email.toLowerCase(),\n      password: values.password,\n    });\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={userSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <FieldGroup>\n          E-mail\n          <FieldStyled name=\"email\" type=\"string\" placeholder=\"some@mail.com\" />\n          <ErrorMessageStyled name=\"email\" component=\"span\" />\n        </FieldGroup>\n\n        <FieldGroup>\n          Password\n          <FieldStyled\n            name=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            placeholder=\"123456\"\n          />\n          <IconButton type=\"button\" onClick={swapPassword}>\n            {showPassword ? <IoEye /> : <IoEyeOffOutline />}\n          </IconButton>\n          <ErrorMessageStyled name=\"password\" component=\"span\" />\n        </FieldGroup>\n\n        <Button type=\"submit\">Sign In </Button>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\n\nimport { LoginForm } from './components/LogInForm';\nimport { Header, Link, TextBlock } from '../Register/RegisterPageStyled';\nimport {\n  useSelector,\n  //  useDispatch\n} from 'react-redux';\nimport { selectErrorMessage } from '../../redux/auth/selectors';\n// import { resendVerify } from '../../redux/auth/operators';\nimport { Button } from '../Register/RegisterPageStyled';\n// import { AppDispatch } from '../../redux/store';\nimport { useAuth } from '../../Hooks';\nimport { useResendVerifyMutation } from '../../redux/sliceApi';\n\nexport default function Login() {\n  const errorMessage = useSelector(selectErrorMessage);\n  // const dispatch = useDispatch<AppDispatch>();\n  const [resendVerify] = useResendVerifyMutation();\n  const { user } = useAuth();\n  const email = user?.email;\n  const onSubmit = () => resendVerify(email);\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <Header>Sign in</Header>\n      <LoginForm />\n      {errorMessage !== 'Email is not verified' ? (\n        <TextBlock>\n          <p>\n            <Link href=\"/register\">Create an Account</Link>\n          </p>\n        </TextBlock>\n      ) : (\n        <TextBlock>\n          <p style={{ color: 'red' }}>E-mail is NOT vetified</p>\n          <p style={{ color: 'red', marginBottom: 20 }}>\n            Resend verification code{' '}\n          </p>\n          <p>\n            <Button type=\"submit\" onClick={onSubmit}>\n              Send\n            </Button>\n          </p>\n        </TextBlock>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  font-size: 30px;\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const TextBlock = styled.div`\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const Link = styled.a`\n  text-decoration: underline;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n\n  align-items: center;\n\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  cursor: pointer;\n  vertical-align: middle;\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  color: rgb(255, 255, 255);\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  outline: 0px;\n  border-width: 0px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 5px -3px,\n      rgba(0, 0, 0, 0.22) 0px 8px 10px 1px, rgba(0, 0, 0, 0.2) 0px 3px 14px 2px;\n  }\n`;","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.norm};\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2);\n\n  padding: ${p => p.theme.padding.huge};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: ${p => p.theme.gap.norm};\n`;\n\nexport const FieldGroup = styled.label`\n  display: flex;\n  font-family: Roboto, sans-serif;\n  font-size: 14px;\n  flex-direction: column;\n  gap: ${p => p.theme.gap.small};\n  position: relative;\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  padding: 0;\n  color: red;\n  font-size: 12px;\n  position: absolute;\n  left: 10px;\n  top: 105%;\n`;\nexport const FieldStyled = styled(Field)`\n  min-width: 200px;\n  padding: ${p => p.theme.padding.small};\n  font-size: 0.875rem;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  position: absolute;\n  right: 4px;\n  top: 55%;\n  border: none;\n  background-color: transparent;\n  align-items: center;\n  color: rgb(25, 118, 210);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  margin-top: 12px;\n  align-items: center;\n\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  cursor: pointer;\n  vertical-align: middle;\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  color: rgb(255, 255, 255);\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  outline: 0px;\n  border-width: 0px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 5px -3px,\n      rgba(0, 0, 0, 0.22) 0px 8px 10px 1px, rgba(0, 0, 0, 0.2) 0px 3px 14px 2px;\n  }\n`;\n"],"names":["userSchema","Yup","shape","email","matches","required","password","min","LoginForm","_useLoginMutation","useLoginMutation","login","_slicedToArray","_useState","useState","_useState2","showPassword","setShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","actions","_context","prev","next","toLowerCase","resetForm","stop","_x","_x2","apply","arguments","_jsx","Formik","initialValues","validationSchema","onSubmit","children","_jsxs","FormStyled","FieldGroup","FieldStyled","name","type","placeholder","ErrorMessageStyled","component","IconButton","onClick","IoEye","IoEyeOffOutline","Button","Login","errorMessage","useSelector","selectErrorMessage","_useResendVerifyMutat","useResendVerifyMutation","resendVerify","user","useAuth","_Fragment","Helmet","Header","TextBlock","Link","href","style","color","marginBottom","styled","_templateObject","_taggedTemplateLiteral","p","theme","padding","norm","_templateObject2","_templateObject3","_templateObject4","Form","colors","borderGray","borderRad","huge","gap","small","ErrorMessage","Field","_templateObject5","_templateObject6"],"sourceRoot":""}